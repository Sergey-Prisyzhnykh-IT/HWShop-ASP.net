@page "/showBasket"
@using System.Text
@using System.Collections.Concurrent
@using Blazored.Toast
@using Blazored.Toast.Services
@using Blazored.Toast.Configuration
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage


<h3>Корзина</h3>
<link href="_content/Blazored.Toast/blazored-toast.min.css" rel="stylesheet" />

@foreach (var p in _basket)
{
    <div>@p.Key.Name</div>
    <img src="@p.Key.urlImage" alt="Image"/>
    <div>@p.Key.Price</div> 
    <div>
        <a href="@p.Key.moreDetails">Подробнее</a>
     </div>

<div>
    <button @onclick="@(() => AddToBasket(p.Key.Name))" >
        +
    </button>
    <span class="count">
       @HowCountProduct(p.Key.Name)
    </span>
    <button @onclick="@(() => RemoveFromBasket(p.Key.Name))">
        -
    </button>
</div>
}


<div>
    <button @onclick="@Clear">
        Очистить Корзину
    </button>
</div>



@inject HWShop_ASP.net.Product.IBasket  Basket;
@inject IToastService ToastService;
@inject ProtectedLocalStorage _localStorage

@code {

    ConcurrentDictionary<HW2OnlineShop.Product, int> _basket;

    protected override void OnInitialized()
    {
        _basket = Basket.ShowBusket();
    }

    private void Clear()
    {
        ToastService.ShowSuccess("Корзина очищена!", ":)");
        Basket.Clear();
    }

    private void AddToBasket(string name)
    {
        Basket.AddProduct(name);
        HowCountProduct(name);
    }

    private void RemoveFromBasket(string name)
    {
        Basket.DeleteProduct(name);
        HowCountProduct(name);
    }

    private int HowCountProduct(string name)
    {
        var temp = Basket.GetProductCount(name);
        return Basket.GetProductCount(name);
    }

   // private async Task SavePerson()
   // {
   //     await _localStorage.SetAsync("basket",_basket);
   // }

   //protected override async Task OnAfterRenderAsync(bool firstRender)
   // {
   //      await base.OnAfterRenderAsync(firstRender);
   //      if (firstRender)
   //      {
   //         var result = await _localStorage.GetAsync<ConcurrentDictionary<HW2OnlineShop.Product, int>>("basket");
   //         if (_basket != null)
   //         {
   //             _basket = result.Value;
   //         }          
   //         StateHasChanged();
   //      }
   // }

}
